services:
  api:
    tty: true
    image: nikolaik/python-nodejs:latest
    container_name: api
    ports:
      - 5293:5293
    volumes:
      - ./api/app:/usr/app
    env_file:
      - ./api/.env
      - .env
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    build:
      dockerfile: ./Dockerfile
      context: ./api
    networks:
      - internal
  webapp:
    image: node
    tty: true
    container_name: webapp-chatbot
    networks:
      - internal
    volumes:
      - ./webapp:/usr/app/src
      - next_cache:/usr/app/src/.next
    env_file:
      - ./webapp/.env
    ports:
      - 5294:3000

    depends_on:
      - redis
      - postgres
      - ollama
      - api

    build:
      dockerfile: ./Dockerfile
      context: ./webapp

  redis:
    image: redis:6.2.6-alpine
    container_name: redis
    command: redis-server --requirepass admin
    networks:
      - internal
    env_file:
      - .env

  postgres:
    container_name: postgres
    image: postgres
    shm_size: 128mb
    env_file:
      - .env
    networks:
      - internal

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    networks:
      - internal
    container_name: ollama
    pull_policy: always
    volumes:
      - ./ollama/ollamaData:/root/.ollama
    tty: true
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    build:
      dockerfile: ./Dockerfile
      context: ./ollama
    healthcheck:
      test: "bash -c 'cat < /dev/null > /dev/tcp/localhost/11434'"
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  internal:
    driver: bridge
    name: internal
    external: false
    driver_opts:
      com.docker.network.driver.mtu: 1450

volumes:
  next_cache:
